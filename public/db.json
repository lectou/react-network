{
  "users": [
    {
      "name": "faridTema",
      "FullName": null,
      "id": 8971,
      "email": null,
      "test": [],
      "photo": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQFGiJ_tIEbFuvt7J7d17ldDOetn-PZteEIDQ&usqp=CAU",
      "status": null,
      "followed": true
    },
    {
      "name": "Markus-cpu",
      "FullName": null,
      "id": 8970,
      "email": null,
      "photo": "https://source.unsplash.com/random/100x100",
      "status": null,
      "followed": true
    },
    {
      "name": "sergey1888888",
      "FullName": null,
      "id": 8969,
      "email": null,
      "photo": "https://img.icons8.com/bubbles/2x/user.png",
      "status": null,
      "followed": false
    },
    {
      "name": "andrii_novak",
      "FullName": null,
      "id": 8968,
      "email": null,
      "photo": null,
      "status": null,
      "followed": true
    },
    {
      "name": "TestUserTomsk",
      "FullName": null,
      "id": 8967,
      "email": null,
      "photo": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRBTQGZJ8guH7CPYsl8nweSZGRRKhR1xp40HArdycIBrJwHzFsxmRnw1VVLv350M6GDYJkSEg&usqp=CAU",
      "status": null,
      "followed": false
    },
    {
      "name": "ash___manukyan",
      "FullName": null,
      "id": 8941,
      "email": null,
      "photo": null,
      "status": null,
      "followed": true
    },
    {
      "name": "manukyan__ash",
      "FullName": null,
      "id": 8940,
      "email": null,
      "photo": "https://asdorural.com/upload/iblock/fa9/fa9e12aa2282dd03350d76c42322fa9b.png",
      "status": null,
      "followed": false
    },
    {
      "name": "ashot",
      "FullName": null,
      "id": 8939,
      "email": null,
      "photo": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSmpoQaaw13BKAmYv1iRPzkz9AkM0ZskCqK_g&usqp=CAU",
      "status": null,
      "followed": false
    },
    {
      "name": "Folen",
      "FullName": null,
      "id": 8938,
      "email": null,
      "photo": "https://img1.freepng.ru/20180706/chf/kisspng-user-profile-computer-icons-user-interface-female-5b3fe4ec8a79e9.8765446615309140285672.jpg",
      "status": null,
      "followed": false
    },
    {
      "name": "sasfwq1",
      "FullName": null,
      "id": 8937,
      "email": null,
      "photo": "https://dwpdigital.blog.gov.uk/wp-content/uploads/sites/197/2016/07/P1090594-1.jpeg",
      "status": null,
      "followed": false
    },
    {
      "name": "kemuro12",
      "FullName": null,
      "id": 8936,
      "email": null,
      "photo": "https://lh3.googleusercontent.com/mbKGl660l4Cz1R10cViqeO8MjHyKHRpmqVaTtkuC2fWWxlLGTpB-ntmb4tu08tOiZVNd",
      "status": null,
      "followed": true
    },
    {
      "name": "Nikita_Efanov",
      "FullName": null,
      "id": 8935,
      "email": null,
      "photo": "https://junglejobs.ru/assets/img/female-avatar.png",
      "status": "Статус",
      "followed": false
    },
    {
      "name": "MetalGearSolid4",
      "FullName": null,
      "id": 8934,
      "email": null,
      "photo": "https://source.unsplash.com/random/300x300",
      "status": null,
      "followed": false
    },
    {
      "name": "BorisPanich",
      "FullName": null,
      "id": 8933,
      "email": null,
      "photo": "https://source.unsplash.com/random/300x300",
      "status": null,
      "followed": false
    },
    {
      "name": "xdarkfenixx",
      "FullName": null,
      "id": 8932,
      "email": null,
      "photo": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRRgvg1-ojNsjy4sYDSZAsBvNogmqplREnyeg&usqp=CAU",
      "status": null,
      "followed": false
    },
    {
      "name": "Limon",
      "FullName": null,
      "id": 8961,
      "email": null,
      "photo": "https://source.unsplash.com/random/300x300",
      "status": null,
      "followed": false
    },
    {
      "name": "FedechkoYuriy",
      "FullName": null,
      "id": 8960,
      "email": null,
      "photo": "https://cdn.pixabay.com/photo/2019/02/18/20/02/face-4005302_960_720.png",
      "status": null,
      "followed": true
    },
    {
      "name": "m_daniiyal",
      "FullName": null,
      "id": 8959,
      "email": null,
      "photo": null,
      "status": null,
      "followed": true
    },
    {
      "name": "NetZ13",
      "FullName": null,
      "id": 8958,
      "email": null,
      "photo": "https://png.pngitem.com/pimgs/s/265-2650014_human-face-png-man-face-portrait-male-person.png",
      "status": null,
      "followed": true
    },
    {
      "name": "kamenskaya",
      "FullName": null,
      "id": 8957,
      "email": null,
      "photo": null,
      "status": null,
      "followed": true
    },
    {
      "name": "shambhala13",
      "FullName": null,
      "id": 8956,
      "email": null,
      "photo": "https://p.kindpng.com/picc/s/154-1542732_portrait-adult-people-man-beard-boldness-business-man.png",
      "status": null,
      "followed": false
    },
    {
      "name": "Yoda_",
      "FullName": null,
      "id": 8955,
      "email": null,
      "photo": "https://ms.vienna-company.kz/images/ava.png",
      "status": null,
      "followed": false
    },
    {
      "name": "yoda",
      "FullName": null,
      "id": 8954,
      "email": null,
      "photo": "https://source.unsplash.com/random/300x300",
      "status": null,
      "followed": true
    },
    {
      "name": "rksondzyk",
      "FullName": null,
      "id": 8953,
      "email": null,
      "photo": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRF3ZihyOgzpiNk3Lc8NOp6GuepTb1xH_CQDQ&usqp=CAU",
      "status": null,
      "followed": true
    },
    {
      "name": "kapoliub",
      "FullName": null,
      "id": 8952,
      "email": null,
      "photo": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTYtenw8eEjiosnDEpzfvB4SQ29qbdrvGdlccvlJdohpR2k6C2RlPDNsDvjjap9Aq-h32uNhA&usqp=CAU",
      "status": null,
      "followed": false
    },
    {
      "name": "kapoliub0",
      "FullName": null,
      "id": 28952,
      "email": null,
      "photo": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRibZJSJzG_AsqlMDaiZFPRH5__X97Tl1mrng&usqp=CAU",
      "status": null,
      "followed": false
    },
    {
      "name": "olhamazurenko",
      "id": 8379,
      "uniqueUrlName": null,
      "photo": "https://i.pinimg.com/originals/a6/58/32/a65832155622ac173337874f02b218fb.png",
      "status": null,
      "followed": false
    },
    {
      "name": "pulliiia23",
      "id": 8378,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/8378/user.jpg?v=1",
      "status": "ok2l;",
      "followed": false
    },
    {
      "name": "LEXX",
      "id": 8377,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "vasvoz-test",
      "id": 8376,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "Aidar21",
      "id": 8375,
      "uniqueUrlName": null,
      "photo": "https://source.unsplash.com/random/300x300",
      "status": null,
      "followed": false
    },
    {
      "name": "Aidar",
      "id": 8374,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": true
    },
    {
      "name": "Alexxxxxx",
      "id": 8373,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": true
    },
    {
      "name": "vadim455789",
      "id": 8372,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": true
    },
    {
      "name": "Tim173",
      "id": 8371,
      "uniqueUrlName": null,
      "photo": "https://source.unsplash.com/random/300x300",
      "status": null,
      "followed": false
    },
    {
      "name": "andrew11",
      "id": 8369,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/8369/user.jpg?v=1",
      "status": "Hi Andrew",
      "followed": true
    },
    {
      "name": "djmaluy1",
      "id": 8368,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "djmaluy",
      "id": 8367,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": true
    },
    {
      "name": "snsbsnsbq",
      "id": 8366,
      "uniqueUrlName": null,
      "photo": null,
      "status": "Молодой пушкин е",
      "followed": false
    },
    {
      "name": "Eugene Davidoff",
      "id": 8365,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/8365/user.jpg?v=1",
      "status": "$3000 per month!!!",
      "followed": false
    },
    {
      "name": "Orion",
      "id": 8364,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "meowash",
      "id": 8363,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "cherepaha",
      "id": 8362,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": true
    },
    {
      "name": "Graf4ik",
      "id": 8361,
      "uniqueUrlName": null,
      "photo": null,
      "status": "Graf4ik yo!!",
      "followed": false
    },
    {
      "name": "rdnk_e",
      "id": 8279,
      "uniqueUrlName": null,
      "photo": null,
      "status": "111222",
      "followed": false
    },
    {
      "name": "oxakost",
      "id": 8278,
      "uniqueUrlName": null,
      "photo": null,
      "status": "Yahoo lala",
      "followed": false
    },
    {
      "name": "Iev",
      "id": 8277,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": true
    },
    {
      "name": "test567891",
      "id": 8276,
      "uniqueUrlName": null,
      "photo": null,
      "status": "Guy with no life🖥.Just beating keys and buttons on the keyboard ⌨",
      "followed": false
    },
    {
      "name": "vadzimkrasouski",
      "id": 8275,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "Artemii",
      "id": 8274,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "Greatlogin",
      "id": 8273,
      "uniqueUrlName": null,
      "photo": null,
      "status": "This is my status!!!",
      "followed": false
    },
    {
      "name": "test5678912",
      "id": 8272,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "JeremyWylde",
      "id": 8271,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/8271/user.jpg?v=1",
      "status": "sup",
      "followed": false
    },
    {
      "name": "AYROLE",
      "id": 7179,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/7179/user.jpg?v=1",
      "status": "da da da yaaaaa",
      "followed": false
    },
    {
      "name": "xces",
      "id": 7178,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "Stariu",
      "id": 7177,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "bohdan21",
      "id": 7176,
      "uniqueUrlName": null,
      "photo": null,
      "status": "",
      "followed": false
    },
    {
      "name": "Tahoe",
      "id": 7175,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "mix",
      "id": 7174,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/7174/user.jpg?v=1",
      "status": "ghgdddsdsd sddwqdqwdqwdqw",
      "followed": false
    },
    {
      "name": "sargsalbert",
      "id": 7173,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "Ivannn",
      "id": 7172,
      "uniqueUrlName": null,
      "photo": null,
      "status": "Yoheysdksj kjss",
      "followed": false
    },
    {
      "name": "AlexVozz",
      "id": 7171,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": true
    },
    {
      "name": "graph",
      "id": 6179,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/6179/user.jpg?v=1",
      "status": "Mom i am facebookerMAN",
      "followed": false
    },
    {
      "name": "BaVlaG",
      "id": 6178,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/6178/user.jpg?v=1",
      "status": "Hello my friend",
      "followed": false
    },
    {
      "name": "1111111111",
      "id": 6177,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/6177/user.jpg?v=1",
      "status": "server txt 5",
      "followed": false
    },
    {
      "name": "AndreiBike",
      "id": 6176,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "Nikitaaaa",
      "id": 6175,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/6175/user.jpg?v=1",
      "status": "Привет Я Никита",
      "followed": false
    },
    {
      "name": "Rold",
      "id": 6174,
      "uniqueUrlName": null,
      "photo": null,
      "status": "хай",
      "followed": false
    },
    {
      "name": "andreyChaki",
      "id": 6173,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "vikos-ka",
      "id": 6172,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "vikos_ka",
      "id": 6171,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "whitecollar1333",
      "id": 5179,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "whitecollar",
      "id": 5178,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "eduard88",
      "id": 5177,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "Aro",
      "id": 5176,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/5176/user.jpg?v=1",
      "status": "Good luck!",
      "followed": false
    },
    {
      "name": "Aro077",
      "id": 5175,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "eduardREACT",
      "id": 5174,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "eduardMD",
      "id": 5173,
      "uniqueUrlName": null,
      "photo": null,
      "status": "dasddsadsadasdsa",
      "followed": false
    },
    {
      "name": "freed52",
      "id": 5172,
      "uniqueUrlName": null,
      "photo": null,
      "status": "dddd",
      "followed": true
    },
    {
      "name": "Djamaka",
      "id": 5171,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/5171/user.jpg?v=1",
      "status": "вапвап",
      "followed": false
    },
    {
      "name": "Sfinx",
      "id": 1184,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/1184/user.jpg?v=1",
      "status": "Ищу работу на фронте в Запорожье !",
      "followed": false
    },
    {
      "name": "my full name",
      "id": 1183,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/1183/user.jpg?v=1",
      "status": "my status",
      "followed": false
    },
    {
      "name": "some login",
      "id": 1182,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "Volod",
      "id": 1181,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": true
    },
    {
      "name": "Volo",
      "id": 1180,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "Jyboer",
      "id": 1179,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "turtuan",
      "id": 1178,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "Sergey  Styrov",
      "id": 1177,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/1177/user.jpg?v=1",
      "status": "This is status!!!!!!!!!!",
      "followed": false
    },
    {
      "name": "zaitsevkuzma",
      "id": 1176,
      "uniqueUrlName": null,
      "photo": "https://social-network.samuraijs.com/activecontent/images/users/1176/user.jpg?v=1",
      "status": "ffdsfd",
      "followed": false
    },
    {
      "name": "ReTester",
      "id": 10848,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "nook",
      "id": 10847,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "ArturKozel",
      "id": 10846,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "Espada",
      "id": 10845,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "Onefuckman",
      "id": 10844,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "redrock",
      "id": 10843,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "Levi484",
      "id": 10842,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "ayefet2",
      "id": 10841,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "shein92",
      "id": 10840,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    },
    {
      "name": "Karter13",
      "id": 10839,
      "uniqueUrlName": null,
      "photo": null,
      "status": null,
      "followed": false
    }
  ],
  "dialogs": [
    {
      "id": "4",
      "userId": 8970,
      "text": "Not the answer you're looking for?",
      "date": "2021-01-22T17:05:44.641Z"
    },
    {
      "id": "5",
      "userId": 8970,
      "text": "Browse other questions tagged",
      "date": "2021-01-22T17:05:44.641Z"
    },
    {
      "id": "6",
      "userId": 8969,
      "text": "By clicking “Post Your Answer”, you agree to our terms of service, privacy policy and cookie policy",
      "date": "2021-01-22T17:05:44.641Z"
    },
    {
      "userId": 8968,
      "user": true,
      "text": "Метод slice() возвращает новый массив, содержащий копию части исходного массива.",
      "date": "2021-01-22T17:05:44.641Z",
      "id": "kdW8jiE"
    },
    {
      "userId": 8971,
      "user": true,
      "text": "This snippet is based on the counter example from the previous page, but we added a new feature to it: we set the document title to a custom message including the number of clicks.",
      "date": "2021-01-25T17:05:44.641Z",
      "id": "fgUMxt9"
    },
    {
      "userId": 8970,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-01-29T17:14:12.007Z",
      "id": "ui5JiVZ"
    },
    {
      "userId": 8968,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-02-20T17:16:12.007Z",
      "id": "mPCLBJ3"
    },
    {
      "userId": 1176,
      "user": true,
      "text": "Network requests, manual DOM mutations, and logging are common examples of effects that don’t require a cleanup. We say that because we can run them and immediately forget about them. Let’s compare how classes and Hooks let us express such side effects.",
      "date": "2021-01-25T17:14:12.007Z",
      "id": "KXb0eav"
    },
    {
      "userId": 8936,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-01-26T17:14:12.007Z",
      "id": "7knGMrr"
    },
    {
      "userId": 8936,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-02-20T17:16:12.007Z",
      "id": "VeYLzik"
    },
    {
      "userId": 8938,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-02-20T17:16:12.007Z",
      "id": "p46qj9jsi"
    },
    {
      "userId": 28952,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-02-20T17:16:12.007Z",
      "id": "cvs76ik27"
    },
    {
      "userId": 8952,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-02-20T17:16:12.007Z",
      "id": "h0quz0mgn"
    },
    {
      "userId": 6177,
      "user": true,
      "text": "In React class components, the render method itself shouldn’t cause side effects. It would be too early — we typically want to perform our effects after React has updated the DOM.",
      "date": "2021-01-26T17:14:12.007Z",
      "id": "om6r2jje1"
    },
    {
      "userId": 7179,
      "user": true,
      "text": "This is why in React classes, we put side effects into componentDidMount and componentDidUpdate. Coming back to our example, here is a React counter class component that updates the document title right after React makes changes to the DOM:",
      "date": "2021-02-26T17:14:12.007Z",
      "id": "qygtpavmi"
    },
    {
      "userId": 7179,
      "user": false,
      "text": "Coming back to our example, here is a React counter class component that updates the document title right after React makes changes to the DOM:",
      "date": "2021-02-26T17:16:12.007Z",
      "id": "qygtpavmi"
    },
    {
      "userId": 8365,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-01-22T17:16:12.007Z",
      "id": "u7zkg2h4e"
    },
    {
      "userId": 1176,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-01-25T17:14:12.007Z",
      "id": "50qhd3gpp"
    },
    {
      "userId": 8376,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-02-20T17:16:12.007Z",
      "id": "rh1gmoogm"
    },
    {
      "userId": 5171,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-01-27T17:14:12.007Z",
      "id": "1dnps35sc"
    },
    {
      "userId": 5176,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-02-20T17:16:12.007Z",
      "id": "hrdvnc3by"
    },
    {
      "userId": 6175,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-02-20T17:16:12.007Z",
      "id": "k0ohpudsq"
    },
    {
      "userId": 8970,
      "text": "For example, we might want to set up a subscription to some external data source. In that case, it is important to clean up so that we don’t introduce a memory leak! Let’s compare how we can do it with classes and with Hooks.",
      "date": "2021-02-20T17:16:12.007Z",
      "id": "bavgrzys2"
    },
    {
      "userId": 8935,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-02-20T17:16:12.007Z",
      "id": "n3c8jihb7"
    },
    {
      "userId": 8379,
      "user": true,
      "text": "This is because in many cases we want to perform the same side effect regardless of whether the component just mounted, or if it has been updated. ",
      "date": "2021-02-20T17:16:12.007Z",
      "id": "dldpq8vne"
    },
    {
      "userId": 8941,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-02-20T17:16:12.007Z",
      "id": "ai0adl3nh"
    },
    {
      "userId": 5171,
      "user": false,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-01-27T17:14:12.007Z",
      "id": "1dnps35sc"
    },
    {
      "userId": 5171,
      "user": true,
      "text": "In React class components, the render method itself shouldn’t cause side effects. It would be too early — we typically want to perform our effects after React has updated the DOM.",
      "date": "2021-01-26T17:14:12.007Z",
      "id": "l1d4epjnz"
    },
    {
      "userId": 8971,
      "user": true,
      "text": "This website stores cookies on your computer. These cookies are used to collect information about how you interact with our website and allow us to remember you. We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on this website and other media. To find out more about the cookies we use, see our Privacy Policy.",
      "date": "2021-01-25T17:06:44.641Z",
      "id": "dp1x4q069"
    },
    {
      "userId": 8969,
      "user": true,
      "text": "By using this Hook, you tell React that your component needs to do something after render.",
      "date": "2021-02-20T17:06:44.641Z",
      "id": "a2rvtpikl"
    },
    {
      "user": false,
      "text": "Метод EventTarget.addEventListener() регистрирует определенный обработчик события, вызванного на EventTarget.",
      "date": "2021-01-18T20:05:40.474Z",
      "id": "79j3r22oz"
    },
    {
      "userId": 8938,
      "user": false,
      "text": "EventTarget может быть Element, Document, Window, или любым другим объектом, поддерживающим события (таким как XMLHttpRequest).",
      "date": "2021-02-23T17:16:12.007Z",
      "id": "byykb4sqp"
    },
    {
      "userId": 8365,
      "user": false,
      "text": "EventTarget может быть Element, Document, Window, или любым другим объектом, поддерживающим события (таким как XMLHttpRequest).",
      "date": "2021-02-23T17:16:12.007Z",
      "id": "aqc3tejp1"
    },
    {
      "userId": 8365,
      "user": false,
      "text": "После инициализации захвата все события указанного типа будут",
      "date": "2021-02-22T17:16:12.007Z",
      "id": "swqc9grjm"
    },
    {
      "userId": 8971,
      "text": "We use this information in order to improve and customize your browsing experience and for analytics and metrics about our visitors both on t",
      "date": "2021-01-19T16:18:54.619Z",
      "id": "xuje2ilec"
    },
    {
      "userId": 8968,
      "text": "How to pass state values to initial values in formik in react js",
      "id": "sfm4ozxab",
      "date": "2021-02-23T16:18:54.619Z"
    },
    {
      "userId": 8971,
      "text": "Data fetching, setting up a subscription, and manually changing the DOM in React components are all examples of side effects. Whether or not you’re used to calling these operations “side effects” (or just “effects”), you’ve likely performed them in your components before.",
      "date": "2021-02-25T17:05:44.641Z",
      "id": "odoucg05c"
    },
    {
      "userId": 1176,
      "text": "Network requests, manual DOM mutations, and logging are common examples of effects that don’t require a cleanup. We say that because we can run them and immediately forget about them. Let’s compare how classes and Hooks let us express such side effects.\n\n",
      "date": "2021-02-25T17:14:12.007Z",
      "id": "c9xag2iq3"
    }
  ],
  "messages": [
    {
      "id": 1,
      "name": "faridTema",
      "userId": 8971,
      "read": false,
      "date": "Mon Nov 09 2020 19:29:19",
      "text": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur fugiat neque aut quibusdam sunt obcaecati vel atque soluta dolore quo corrupti ut fugit, iste quasi! Quaerat autem illo sequi, ratione atque quis quod. Iste, repellendus iure ex voluptatem laudantium culpa nulla voluptatibus maxime aliquam ullam natus veniam? Inventore, cumque veniam cum, veritatis voluptates in eaque voluptatum animi quam obcaecati culpa minima eius omnis nihil, iure earum consectetur laborum! Doloribus, asperiores!",
      "photo": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQFGiJ_tIEbFuvt7J7d17ldDOetn-PZteEIDQ&usqp=CAU"
    },
    {
      "id": 2,
      "name": "Markus-cpu",
      "userId": 8970,
      "read": true,
      "date": "Mon Nov 09 2020 19:29:19",
      "text": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur fugiat neque aut quibusdam sunt obcaecati vel atque",
      "photo": null
    },
    {
      "id": 3,
      "name": "sergey1888888",
      "userId": 8969,
      "read": false,
      "date": "Mon Nov 09 2020 19:29:19",
      "text": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur fugiat neque aut quibusdam sunt obcaecati vel atque",
      "photo": "https://img.icons8.com/bubbles/2x/user.png"
    },
    {
      "id": 4,
      "name": "andrii_novak",
      "userId": 8968,
      "read": true,
      "date": "Mon Nov 09 2020 19:29:19",
      "text": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur fugiat neque aut quibusdam sunt obcaecati vel atque",
      "photo": null
    },
    {
      "id": 5,
      "name": "TestUserTomsk",
      "userId": 8967,
      "date": "Mon Nov 09 2020 19:29:19",
      "text": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur fugiat neque aut quibusdam sunt obcaecati vel atque",
      "photo": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRBTQGZJ8guH7CPYsl8nweSZGRRKhR1xp40HArdycIBrJwHzFsxmRnw1VVLv350M6GDYJkSEg&usqp=CAU",
      "read": false
    },
    {
      "name": "sergey1888888",
      "userId": 8969,
      "read": false,
      "text": "  Line 15:6:  React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect  react-hooks/exhaustive-deps",
      "user": true,
      "date": "Mon Nov 09 2020 19:29:19",
      "photo": "https://img.icons8.com/bubbles/2x/user.png",
      "id": "160lh9h1c"
    },
    {
      "name": "vadim455789",
      "userId": 8372,
      "read": true,
      "text": "  Line 15:6:  React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect  react-hooks/exhaustive-deps",
      "user": true,
      "date": "Mon Nov 09 2020 19:29:19",
      "photo": null,
      "id": "r29gfmlwg"
    },
    {
      "name": "andrii_novak",
      "userId": 8968,
      "read": true,
      "text": "  Line 15:6:  React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect  react-hooks/exhaustive-deps",
      "user": true,
      "date": "Mon Nov 09 2020 19:29:19",
      "photo": null,
      "id": "kps55e0bs"
    },
    {
      "name": "sergey1888888",
      "userId": 8969,
      "read": false,
      "text": "  Line 15:6:  React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect  react-hooks/exhaustive-deps",
      "user": true,
      "date": "Mon Nov 09 2020 19:29:19",
      "photo": "https://img.icons8.com/bubbles/2x/user.png",
      "id": "7fuam7lpd"
    },
    {
      "name": "andrii_novak",
      "userId": 8968,
      "read": false,
      "text": "afsdf",
      "user": true,
      "date": "2020-11-11T20:11:29.945Z",
      "photo": null,
      "id": "go3s207p9"
    }
  ],
  "posts": [
    {
      "image": "https://c4.wallpaperflare.com/wallpaper/86/549/159/sword-samurai-digital-art-fan-art-wallpaper-preview.jpg",
      "title": "useRef",
      "text": "Возможно, вы знакомы с рефами в основном как со способом получить доступ к DOM. Если вы передадите React объект рефа с помощью подобного выражения <div ref={myRef}/>, React установит собственное свойство .current на соответствующий DOM-узел при каждом его изменении.\n\nНо хук useRef() полезен не только установкой атрибута с рефом. Он удобен для сохранения любого мутируемого значения, по аналогии с тем, как вы используете поля экземпляра в классах.",
      "like": 0,
      "dislike": 0,
      "date": "2021-01-17T19:42:37.862Z",
      "id": "ckk777ut0"
    },
    {
      "image": "https://c4.wallpaperflare.com/wallpaper/479/371/644/anime-avatar-the-last-airbender-aang-appa-wallpaper-preview.jpg",
      "title": "useMemo",
      "text": "Передайте «создающую» функцию и массив зависимостей. useMemo будет повторно вычислять мемоизированное значение только тогда, когда значение какой-либо из зависимостей изменилось. Эта оптимизация помогает избежать дорогостоящих вычислений при каждом рендере.\n\nПомните, что функция, переданная useMemo, запускается во время рендеринга. Не делайте там ничего, что вы обычно не делаете во время рендеринга. Например, побочные эффекты принадлежат useEffect, а не useMemo.\n\nЕсли массив не был передан, новое значение будет вычисляться при каждом рендере.\n\nВы можете использовать useMemo как оптимизацию производительности, а не как семантическую гарантию. В будущем React может решить «забыть» некоторые ранее мемоизированные значения и пересчитать их при следующем рендере, например, чтобы освободить память для компонентов вне области видимости экрана. Напишите свой код, чтобы он по-прежнему работал без useMemo, а затем добавьте его для оптимизации производительности.",
      "like": 0,
      "dislike": 0,
      "date": "2021-01-18T16:50:22.432Z",
      "id": "npfxu34e9"
    },
    {
      "image": "https://c4.wallpaperflare.com/wallpaper/490/107/685/the-dark-background-owl-paint-minimalism-wallpaper-preview.jpg",
      "title": "EventTarget.addEventListener()",
      "text": "В более старых версиях спецификации DOM третьим параметром addEventListener было логическое значение, указывающее, следует ли захватывать событие на этапе погружения. Со временем стало ясно, что необходимо больше вариантов. Вместо добавления дополнительных параметров в функцию (усложняя ситуацию при использовании необязательных значений) третий параметр был изменен на объект, который может содержать различные свойства, определяющие значения параметров для настройки слушателя событий.\n\nПоскольку старые браузеры (а также некоторые не слишком старые браузеры) по-прежнему предполагают, что третий параметр является логическим, возникает необходимость создания своего кода, чтобы разумно обрабатывать этот сценарий. Вы можете сделать это, используя функцию обнаружения для каждого из интересующих вас параметров.",
      "like": 0,
      "dislike": 0,
      "date": "2021-01-25T21:53:40.599Z",
      "id": "r19ikhbfg"
    },
    {
      "image": "https://c4.wallpaperflare.com/wallpaper/564/483/639/artwork-digital-art-robot-samurai-wallpaper-preview.jpg",
      "title": "useEffect",
      "text": "Accepts a function that contains imperative, possibly effectful code.\n\nMutations, subscriptions, timers, logging, and other side effects are not allowed inside the main body of a function component (referred to as React’s render phase). Doing so will lead to confusing bugs and inconsistencies in the UI.\n\nInstead, use useEffect. The function passed to useEffect will run after the render is committed to the screen. Think of effects as an escape hatch from React’s purely functional world into the imperative world.\n\nBy default, effects run after every completed render, but you can choose to fire them only when certain values have changed.\n\nCleaning up an effect\nOften, effects create resources that need to be cleaned up before the component leaves the screen, such as a subscription or timer ID. To do this, the function passed to useEffect may return a clean-up function. ",
      "like": 0,
      "dislike": 0,
      "date": "2021-02-25T17:56:19.636Z",
      "id": "u0zimd06g"
    }
  ],
  "comments": [
    {
      "name": "Farid",
      "date": "2021-02-18T16:50:22.432Z",
      "id": 3,
      "postId": "ckk777ut0",
      "text": "By clicking “Post Your Answer”, you agree to our terms of service, privacy policy and cookie policy",
      "photo": "https://cdn.iconscout.com/icon/free/png-512/laptop-user-1-1179329.png"
    },
    {
      "name": "Farid",
      "date": "2021-02-18T16:50:22.432Z",
      "id": 4,
      "postId": "ckk777ut0",
      "text": "By clicking “Post Your Answer”, you agree to our terms of service, privacy policy and cookie policy",
      "photo": "https://cdn.iconscout.com/icon/free/png-512/laptop-user-1-1179329.png"
    },
    {
      "name": "Alex_qwerty",
      "date": "2021-02-18T16:50:22.432Z",
      "id": "kze57t47g",
      "postId": "ckk777ut0",
      "text": "How to pass state values to initial values in formik in react js",
      "photo": "https://cdn0.iconfinder.com/data/icons/professional-avatar-5/48/3d_modeling_male_avatar_men_character_professions-512.png"
    },
    {
      "name": "Marcus",
      "date": "2021-02-25T19:22:23.883Z",
      "id": "ih8epfcvn",
      "postId": "u0zimd06g",
      "text": "Think of effects as an escape hatch from React’s purely functional world into the imperative world. By default, effects run after every completed render, but you can choose to fire them only w",
      "photo": "https://cdn.iconscout.com/icon/free/png-512/laptop-user-1-1179329.png"
    },
    {
      "name": "Alex_qwerty12",
      "date": "2021-02-25T19:22:38.823Z",
      "id": "p9be0g57e",
      "postId": "u0zimd06g",
      "text": " To do this, the function passed to useEffect may return a clean-up function.",
      "photo": "https://cdn0.iconfinder.com/data/icons/professional-avatar-5/48/3d_modeling_male_avatar_men_character_professions-512.png"
    },
    {
      "name": "Alex_qwerty12",
      "date": "2021-02-25T19:24:42.817Z",
      "id": "j954qh2pp",
      "postId": "r19ikhbfg",
      "text": " Вы можете сделать это, используя функцию обнаружения для каждого из интересующих вас параметров.",
      "photo": "https://cdn0.iconfinder.com/data/icons/professional-avatar-5/48/3d_modeling_male_avatar_men_character_professions-512.png"
    },
    {
      "name": "Folen",
      "date": "2021-02-25T19:24:42.817Z",
      "id": "j954qh2ip",
      "postId": "r19ikhbfg",
      "text": "В более старых версиях спецификации DOM третьим параметром addEventListener было логическое значение, указывающее, следует ли захватывать событие на этапе погружения.",
      "photo": "https://cdn.iconscout.com/icon/free/png-512/laptop-user-1-1179329.png"
    },
    {
      "name": "Alex_qwerty12",
      "date": "2021-02-25T19:27:36.230Z",
      "id": "46fzjk6e4",
      "postId": "npfxu34e9",
      "text": "Напишите свой код, чтобы он по-прежнему работал без useMemo, а затем добавьте его для оптимизации производительности.",
      "photo": "https://cdn0.iconfinder.com/data/icons/professional-avatar-5/48/3d_modeling_male_avatar_men_character_professions-512.png"
    },
    {
      "name": "Marcus",
      "date": "2021-02-25T19:27:36.230Z",
      "id": "46fzjk674",
      "postId": "npfxu34e9",
      "text": " В будущем React может решить «забыть» некоторые ранее мемоизированные значения и пересчитать их при следующем рендере, например, чтобы освободить память для компонентов вне области видимости экрана.",
      "photo": "https://cdn.iconscout.com/icon/free/png-512/laptop-user-1-1179329.png"
    }
  ],
  "profile": {
    "name": "Alex_qwerty12",
    "email": "lectou@outlook.com",
    "aboutMe": "learn js, react",
    "status": "Front-end dev",
    "info": "Lorem ipsum dolor sit amet consectetur adipisicing elit. At expedita excepturi autem, a laboriosam neque pariatur, tempora fuga, doloribus dolore itaque sapiente quod tempore doloremque et rerum sed? Placeat commodi repellat vel provident repudiandae, aliquam porro asperiores, libero debitis laboriosam facilis autem impedit sint, doloribus quaerat! Eligendi sapiente adipisci omnis. Reprehenderit, accusamus. Veritatis qui iure eaque voluptatibus perspiciatis tenetur eius corporis ad ut odio velit, veniam quia suscipit .",
    "id": 3663,
    "photo": "https://cdn0.iconfinder.com/data/icons/professional-avatar-5/48/3d_modeling_male_avatar_men_character_professions-512.png"
  },
  "auth": {
    "id": 6360,
    "name": "user",
    "password": "123",
    "email": "lectou@outlook.com",
    "isAuth": true
  }
}